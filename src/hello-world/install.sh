#!/bin/bash
set -e

# Feature options (from environment variables)
GREETING=${GREETING:-"Hello"}
NAME=${NAME:-"World"}
INCLUDE_DATE=${INCLUDEDATE:-"false"}

echo "Starting hello-world feature installation..."
echo "Options: greeting='$GREETING', name='$NAME', includeDate='$INCLUDE_DATE'"

# Platform detection
if [ -f /etc/os-release ]; then
    . /etc/os-release
    echo "Detected OS: $ID $VERSION_ID"
else
    echo "WARNING: Could not detect OS version"
fi

# Architecture detection
ARCHITECTURE="$(uname -m)"
echo "Detected architecture: $ARCHITECTURE"

# Validate platform support
if [[ "${ID}" != "ubuntu" ]] && [[ "${ID}" != "debian" ]]; then
    echo "WARNING: This feature is designed for Ubuntu/Debian but may work on other distributions"
fi

# Check if running as root
if [ "$(id -u)" -ne 0 ]; then
    echo "ERROR: Script must be run as root. Use sudo or run in a container as root."
    exit 1
fi

# Idempotency check
if command -v hello-world >/dev/null 2>&1; then
    echo "hello-world command already exists. Checking if it needs to be updated..."

    # Check if our version is already installed
    if hello-world --version 2>/dev/null | grep -q "hello-world 1.0.0"; then
        echo "hello-world feature already installed with correct version. Skipping installation."
        exit 0
    else
        echo "Different version detected. Proceeding with installation..."
    fi
fi

# Create installation directory
INSTALL_DIR="/usr/local/bin"
SCRIPT_PATH="$INSTALL_DIR/hello-world"

echo "Installing hello-world command to $SCRIPT_PATH..."

# Create the hello-world script
cat > "$SCRIPT_PATH" << EOF
#!/bin/bash

# hello-world command generated by dev container feature
# Version: 1.0.0
# Greeting: $GREETING
# Name: $NAME
# Include Date: $INCLUDE_DATE

show_help() {
    echo "hello-world - A simple greeting command"
    echo ""
    echo "Usage: hello-world [OPTIONS]"
    echo ""
    echo "Options:"
    echo "  -h, --help     Show this help message"
    echo "  -v, --version  Show version information"
    echo "  -g, --greeting GREETING  Override the default greeting"
    echo "  -n, --name NAME          Override the default name"
    echo "  -d, --date               Include current date"
    echo ""
    echo "Examples:"
    echo "  hello-world"
    echo "  hello-world --greeting Hi --name Developer"
    echo "  hello-world --date"
}

show_version() {
    echo "hello-world 1.0.0"
    echo "Installed by dev container feature"
}

# Default values from feature configuration
GREETING_VAL="$GREETING"
NAME_VAL="$NAME"
INCLUDE_DATE_VAL="$INCLUDE_DATE"

# Parse command line arguments
while [[ \$# -gt 0 ]]; do
    case \$1 in
        -h|--help)
            show_help
            exit 0
            ;;
        -v|--version)
            show_version
            exit 0
            ;;
        -g|--greeting)
            GREETING_VAL="\$2"
            shift 2
            ;;
        -n|--name)
            NAME_VAL="\$2"
            shift 2
            ;;
        -d|--date)
            INCLUDE_DATE_VAL="true"
            shift
            ;;
        *)
            echo "Unknown option: \$1"
            echo "Use --help for usage information"
            exit 1
            ;;
    esac
done

# Generate the greeting
GREETING_TEXT="\$GREETING_VAL, \$NAME_VAL!"

if [ "\$INCLUDE_DATE_VAL" = "true" ]; then
    CURRENT_DATE=\$(date '+%Y-%m-%d %H:%M:%S')
    GREETING_TEXT="\$GREETING_TEXT (at \$CURRENT_DATE)"
fi

echo "\$GREETING_TEXT"
EOF

# Make the script executable
chmod +x "$SCRIPT_PATH"

# Verify installation
if command -v hello-world >/dev/null 2>&1; then
    echo "âœ“ hello-world command installed successfully"

    # Test the installation
    echo "Testing installation:"
    hello-world --version
    hello-world
else
    echo "ERROR: hello-world command installation failed"
    exit 1
fi

# Set up environment for non-root user if specified
if [ -n "$_REMOTE_USER" ] && [ "$_REMOTE_USER" != "root" ]; then
    echo "Setting up environment for user: $_REMOTE_USER"

    # Ensure the user can access the command
    if [ -d "$_REMOTE_USER_HOME" ]; then
        # Add a note to the user's profile about the new command
        PROFILE_FILE="$_REMOTE_USER_HOME/.bashrc"
        if [ -f "$PROFILE_FILE" ]; then
            echo "" >> "$PROFILE_FILE"
            echo "# hello-world feature installed" >> "$PROFILE_FILE"
            echo "# Use 'hello-world --help' for usage information" >> "$PROFILE_FILE"

            # Change ownership to the remote user
            chown "$_REMOTE_USER:$_REMOTE_USER" "$PROFILE_FILE"
        fi
    fi
fi

echo "hello-world feature installation completed successfully!"
echo ""
echo "Usage examples:"
echo "  hello-world                    # Use default settings"
echo "  hello-world --help             # Show help"
echo "  hello-world --greeting Hi      # Custom greeting"
echo "  hello-world --date             # Include current date"
